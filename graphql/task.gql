extend type Query @guard {
  tasks(
    search: String @search
    orderBy: _ @orderBy(columns: ["title", "created_at"])
  ): [Task!]! @paginate

  task(id: Hashid! @eq): Task @find
}

extend type Mutation @guard {
  createTask(
    title: String! @rules(apply: ["required"])
    description: String! @rules(apply: ["required"])
  ): Task! @create @inject(context: "user.id", name: "creator_id")

  updateTask(
    id: Hashid!
    title: String! @rules(apply: ["required"])
    description: String! @rules(apply: ["required"])
  ): Task! @update

  deleteTask(id: Hashid!): Task! @delete
}

type Task {
  id: Hashid!
  title: String!
  description: String!
  createdAt: DateTime! @rename(attribute: "created_at")
  updatedAt: DateTime! @rename(attribute: "updated_at")
  creator: User! @belongsTo
  assignees: [User!]! @belongsToMany
}
