extend type Query @guard {
  users(
    orderBy: _ @orderBy(columns: ["name", "email", "created_at"])
  ): [User!]! @paginate(defaultCount: 10)

  user(id: ID! @hashid @eq): User @find
  authUser: User @auth
}

extend type Mutation @guard {
  createUser(input: CreateUser! @spread): User! @create
  updateUser(input: UpdateUser! @spread): User! @update
  deleteUser(id: ID! @hashid): User! @delete
}

type User {
  id: ID! @hashid
  name: String!
  email: String!
  createdAt: DateTime! @rename(attribute: "created_at")
  updatedAt: DateTime! @rename(attribute: "updated_at")
}

input CreateUser {
  name: String! @rules(attribute: "name", apply: ["required"])
  email: String!
    @rules(
      attribute: "email"
      apply: ["required", "email", "unique:users,email"]
    )
  # TODO: delete this line
  password: String! = "secret" @hash
}

input UpdateUser {
  id: ID! @hashid
  name: String! @rules(attribute: "name", apply: ["required"])
  email: String! @rules(attribute: "email", apply: ["required", "email"])
}
